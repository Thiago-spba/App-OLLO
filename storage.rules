rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {

    // --- FUN√á√ïES HELPER ---
    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }

    // Regra Padr√£o: Nega todo o acesso por padr√£o.
    // O acesso s√≥ √© concedido pelas regras mais espec√≠ficas abaixo.
    match /{allPaths=**} {
      allow read, write: if false;
    }

    // --- REGRAS ESPEC√çFICAS POR PASTA ---

    // üë§ Avatares de Perfil: /avatars/{userId}/{fileName}
    match /avatars/{userId}/{fileName} {
      // Qualquer pessoa autenticada pode ler os avatares (s√£o p√∫blicos).
      allow read: if request.auth != null;
      // Apenas o dono do perfil pode escrever seu pr√≥prio avatar.
      allow write: if isOwner(userId)
                   && request.resource.size < 5 * 1024 * 1024 // Limite de 5MB
                   && request.resource.contentType.matches('image/.*');
    }

    // üñºÔ∏è Imagens de Capa de Perfil: /covers/{userId}/{fileName}
    match /covers/{userId}/{fileName} {
      allow read: if request.auth != null;
      // Regras id√™nticas √†s dos avatares.
      allow write: if isOwner(userId)
                   && request.resource.size < 5 * 1024 * 1024 // 5MB
                   && request.resource.contentType.matches('image/.*');
    }
    
    // Í∞§Îü¨Î¶¨ M√≠dia da Galeria do Usu√°rio: /gallery/{userId}/{mediaId}
    // Esta regra parece combinar as m√≠dias de post e de perfil. √â uma boa centraliza√ß√£o.
    match /gallery/{userId}/{mediaId} {
      allow read: if request.auth != null;
      // Apenas o dono do perfil pode fazer upload, atualizar ou deletar suas pr√≥prias m√≠dias.
      allow write: if isOwner(userId)
                   && request.resource.size < 50 * 1024 * 1024 // Limite de 50MB (para v√≠deos)
                   && request.resource.contentType.matches('image/.*|video/.*');
    }

    // ‚úçÔ∏è M√≠dia de Posts: /posts/{userId}/{fileName} - AJUSTE CR√çTICO DE SEGURAN√áA
    // Esta estrutura √© comum se voc√™ separa m√≠dias de posts da galeria geral.
    match /posts/{userId}/{fileName} {
      allow read: if request.auth != null;
      // CORRE√á√ÉO: Apenas o dono do post (identificado pelo {userId}) pode criar/escrever.
      // A regra antiga permitia que qualquer um escrevesse em qualquer lugar.
      allow write: if isOwner(userId)
                   && request.resource.size < 50 * 1024 * 1024 // 50 MB
                   && (request.resource.contentType.matches('image/.*') ||
                       request.resource.contentType.matches('video/.*'));
    }

    // üõí M√≠dia de Listagens (Marketplace): /listagens/{userId}/{fileName}
    match /listagens/{userId}/{fileName} {
      allow read: if request.auth != null;
      // Apenas o vendedor pode enviar imagens do produto.
      allow write: if isOwner(userId)
                   && request.resource.size < 10 * 1024 * 1024 // 10 MB
                   && request.resource.contentType.matches('image/.*');
    }
  }
}