// ARQUIVO: storage.rules

rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {

    // ADIÇÃO: Regra específica para a pasta de avatares
    match /avatars/{userId}/{imageId} {
      // Qualquer um pode ler um avatar (imagens de perfil são públicas).
      allow read: if true;
      
      // Apenas o usuário autenticado pode escrever em sua própria pasta de avatar.
      // MELHORIA: Adicionamos uma verificação de tamanho e tipo de arquivo por segurança.
      allow write: if request.auth != null && request.auth.uid == userId
                   && request.resource.size < 5 * 1024 * 1024 // Limite de 5MB
                   && request.resource.contentType.matches('image/.*');
    }

    // ADIÇÃO: Regra específica para a pasta de imagens de capa
    match /covers/{userId}/{imageId} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.uid == userId
                   && request.resource.size < 5 * 1024 * 1024
                   && request.resource.contentType.matches('image/.*');
    }

    // SUA REGRA ORIGINAL PARA POSTS (PRESERVADA)
    match /posts/{postId}/{allImages=**} {
      allow read: if true;
      allow create: if request.auth != null;
      // Nota: A regra de update/delete aqui pode ser aprimorada no futuro
      // para verificar a propriedade do post no Firestore.
      allow update, delete: if request.auth != null;
    }

    // SUA REGRA ORIGINAL DE BLOQUEIO (PRESERVADA E ESSENCIAL)
    // Bloqueia o acesso a qualquer outro caminho não especificado acima.
    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
}