// ARQUIVO CORRIGIDO E DEFINITIVO: firestore.rules

rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // --- FUN√á√ïES HELPER ---
    // ARQUITETURA: Fun√ß√µes reutiliz√°veis para manter as regras limpas (DRY principle).

    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // MUDAN√áA: Criamos uma fun√ß√£o espec√≠fica para verificar se o usu√°rio √© admin.
    // Isso √© mais seguro e leg√≠vel do que uma regra wildcard.
    function isAdmin() {
      return request.auth != null && exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }

    // --- REGRAS POR COLE√á√ÉO ---

    // üë§ Cole√ß√£o 'users' (DADOS PRIVADOS E SENS√çVEIS)
    match /users/{userId} {
      // Apenas o dono ou um admin pode ler/escrever dados privados.
      allow read, write: if isOwner(userId) || isAdmin();
    }

    // üì¢ Cole√ß√£o 'users_public' (DADOS P√öBLICOS DE PERFIL)
    match /users_public/{userId} {
      // Leitura √© permitida para todos.
      allow read: if true;

      // Escrita √© permitida apenas pelo dono ou por um admin.
      allow write: if isOwner(userId) || isAdmin();
    }

    // üñºÔ∏è Subcole√ß√£o 'media' de um usu√°rio
    match /users/{userId}/media/{mediaId} {
      // Leitura √© permitida se o item for p√∫blico, se o usu√°rio for o dono, ou se for um admin.
      allow read: if resource.data.privacy == 'public' || isOwner(userId) || isAdmin();
      
      // CORRE√á√ÉO: Adicionamos 'update' para permitir alterar a privacidade de uma m√≠dia.
      // Apenas o dono ou um admin pode criar, atualizar ou deletar m√≠dias.
      allow create, update, delete: if isOwner(userId) || isAdmin();
    }
    
    // ‚úçÔ∏è Cole√ß√£o 'posts'
    match /posts/{postId} {
      // Leitura de posts √© p√∫blica.
      allow read: if true;

      // Criar posts requer autentica√ß√£o e que o autor seja o pr√≥prio usu√°rio.
      // Admins tamb√©m podem criar posts (ex: an√∫ncios).
      allow create: if (request.auth != null && request.resource.data.authorId == request.auth.uid) || isAdmin();

      // Atualizar/deletar posts requer que o usu√°rio seja o autor do post ou um admin.
      allow update, delete: if (request.auth != null && resource.data.authorId == request.auth.uid) || isAdmin();
    }

    // ARQUITETURA DE SEGURAN√áA: A regra de admin com wildcard foi REMOVIDA.
    // A l√≥gica foi distribu√≠da para cada cole√ß√£o individualmente,
    // tornando o sistema de permiss√µes mais expl√≠cito, seguro e f√°cil de manter.
  }
}