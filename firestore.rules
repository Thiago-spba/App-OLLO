rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // --- REGRAS PARA COLLECTION GROUP QUERIES ---
    // Permitem buscas em todas as cole√ß√µes com estes nomes, n√£o importa a profundidade.

    match /{path=**}/posts/{postId} {
      allow read: if true;
    }
    match /{path=**}/users/{userId} {
      allow read: if true;
    }
    match /{path=**}/listagens/{docId} {
      allow read: if true;
    }
     match /{path=**}/stories/{storyId} {
      allow read: if true;
    }

    // --- REGRAS ORIGINAIS (MANTIDAS) ---

    // üë§ Perfis de usu√°rios
    match /users/{userId} {
      // get j√° est√° coberto pela regra de collection group acima
      // allow get: if true; 
      allow write: if request.auth != null && request.auth.uid == userId;
    }

    // üìù Posts
    match /posts/{postId} {
      // get j√° est√° coberto pela regra de collection group acima
      // allow get: if true;
      allow write: if request.auth != null && request.auth.uid == request.resource.data.uid;
    }

    // üõçÔ∏è Listagens
    match /listagens/{docId} {
      // get j√° est√° coberto pela regra de collection group acima
      // allow get: if true;
      allow write: if request.auth != null && request.auth.uid == request.resource.data.uid;
    }

    // üìö Stories
    match /stories/{storyId} {
      // get j√° est√° coberto pela regra de collection group acima
      // allow get: if true;
      allow write: if request.auth != null && request.auth.uid == request.resource.data.userId;
    }

    // üîê Admins: regra unificada para acesso total
    // Esta regra √© uma exce√ß√£o e permite acesso total a admins.
    match /{document=**} {
      allow read, write: if request.auth != null &&
                           exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }
  }
}